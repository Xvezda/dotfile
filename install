#!/bin/bash -e
# Copyright (c) 2018 Xvezda <https://xvezda.com>
# author:   xvezda <xvezda@naver.com>
# desc:     install dotfiles


# Get current absolute path
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"
cd $DIR

# Vim dotfiles setup
vimconf_setup () {
    # Install vim configurations
    which vim > /dev/null 2>&1 || return

    # Move configuration files to home directory
    VIMDOT_PATH="$DIR/src/vim"
    mkdir -p ~/.vim/private
    mkdir -p ~/.vim/syntax
    mkdir -p ~/.vim/UltiSnips
    cp -R $VIMDOT_PATH/private/* ~/.vim/private
    cp -R $VIMDOT_PATH/syntax/* ~/.vim/syntax
    cp -R $VIMDOT_PATH/UltiSnips/* ~/.vim/UltiSnips
    cp $VIMDOT_PATH/vimrc ~/.vimrc
    cp $VIMDOT_PATH/vimrc.local ~/.vimrc.local
    cp $VIMDOT_PATH/vimrc.local.bundles ~/.vimrc.local.bundles

    # Install vim plugins
    vim +PlugInstall +qall
}

# NeoVim dotfiles setup
nvimconf_setup () {
    # Install nvim configurations
    which nvim > /dev/null 2>&1 || return

    # Move configuration files to home directory
    VIMDOT_PATH="$DIR/src/vim"
    mkdir -p $XDG_CONFIG_HOME/nvim/private
    mkdir -p $XDG_CONFIG_HOME/nvim/template
    cp -R $VIMDOT_PATH/private/* $XDG_CONFIG_HOME/nvim/private
    cp -R $VIMDOT_PATH/UltiSnips/* $XDG_CONFIG_HOME/nvim/UltiSnips
    cp $VIMDOT_PATH/vimrc $XDG_CONFIG_HOME/nvim/init.vim
    cp $VIMDOT_PATH/vimrc.local $XDG_CONFIG_HOME/nvim/local_init.vim
    cp $VIMDOT_PATH/vimrc.local.bundles $XDG_CONFIG_HOME/nvim/local_bundles.vim

    # Install vim plugins
    nvim +PlugInstall +qall
}

# Tmux dotfiles setup
tmuxconf_setup () {
    # Install tmux configurations
    which tmux > /dev/null 2>&1 || return

    # Create tmux local settings directory
    mkdir -p ~/.tmux

    # Move tmux configuration files to home directory
    TMUXDOT_PATH="$DIR/src/tmux"
    cp $TMUXDOT_PATH/tmux.conf ~/.tmux.conf

    cp $TMUXDOT_PATH/jellybeans.conf ~/.tmux/jellybeans.conf
    cp $TMUXDOT_PATH/tmux.local.conf ~/.tmux/tmux.local.conf
    cp $TMUXDOT_PATH/key.conf ~/.tmux/key.conf

    # Backward compatibility
    cp $TMUXDOT_PATH/jellybeans.old.conf ~/.tmux/jellybeans.old.conf
    cp $TMUXDOT_PATH/tmux.local.old.conf ~/.tmux/tmux.local.old.conf
    cp $TMUXDOT_PATH/key.old.conf ~/.tmux/key.old.conf

    # Reload tmux configuration
    tmux source-file ~/.tmux.conf
}

# Zsh dotfiles setup
zshconf_setup () {
    which zsh > /dev/null 2>&1 || return
    ZSHDOT_PATH="$DIR/src/zsh"

    cp $ZSHDOT_PATH/zprofile ~/.zprofile
    cp $ZSHDOT_PATH/zshrc ~/.zshrc
}

tidyconf_setup () {
    which tidy > /dev/null 2>&1 || return
    TIDYDOT_PATH="$DIR/src/tidy"

    cp $TIDYDOT_PATH/tidyrc ~/.tidyrc
}

jshintconf_setup () {
    which jshint > /dev/null 2>&1 || return
    JSHINTDOT_PATH="$DIR/src/jshint"

    cp $JSHINTDOT_PATH/jshintrc ~/.jshintrc
}

# Full dotfiles setup
dotfiles_setup () {
    zshconf_setup
    vimconf_setup
    tmuxconf_setup
    tidyconf_setup
    jshintconf_setup
}


# Show usage if no parameter
USAGE_MSG="
usage:
    $0 <command>
commands:
    --setup <target>  install dotfiles
            all
            zsh
            vim
            tmux
    --fetch           update dotfiles pull from origin master

*WARNING*
THIS PROGRAM DOES NOT SUPPORT RESET
BACKUP YOUR OWN CONFIGURATION FILES TO RESTORE
"

if [ "$#" -lt 1 ]
then
    echo "${USAGE_MSG}"
    exit
fi

# https://gist.github.com/magnetikonline/22c1eb412daa350eeceee76c97519da8
# read arguments
OPTS=$(getopt \
        --longoptions setup:,fetch \
        --name "$(basename "$0")" \
        --options "" \
        -- "$@"
)

TARGET=""
while [ "$#" -gt 0 ]; do
    case "$1" in
        --setup) TARGET=$2; shift 2 ;;
        --fetch)
            git fetch && git reset --hard origin/master
            shift;
            exit 0;;
        --) shift ;;
        *) echo "invalid command"; exit 1; break;;
    esac
done

# Setup
case $TARGET in
    vim)
        vimconf_setup;
        ;;
    nvim)
        nvimconf_setup;
        ;;
    tmux)
        tmuxconf_setup;
        ;;
    zsh)
        zshconf_setup;
        ;;
    *)
        dotfiles_setup;
        ;;
esac


# vim:ft=sh
