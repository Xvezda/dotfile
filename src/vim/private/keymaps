" Copyright (C) 2019 Xvezda <https://xvezda.com/>


" Set paste toggle to F10
set pastetoggle=<F10>

" Ignore supertab \w shift
inoremap <S-Tab> <Tab>
" Map to ctrl+l as well
inoremap <C-l> <Tab>

" Fold toggle with spacebar
nnoremap <Space> za
nnoremap <S-Space> zA

" Up and down for visual line
nnoremap j gj
nnoremap k gk
nnoremap 0 g0
nnoremap $ g$

" Yand to the end of the line
nnoremap Y y$

" Map Re-do to U
nnoremap U <C-r>
nnoremap <C-r> U

" Disable visual lowercase mapping
vnoremap L u
vnoremap u <Nop>

" Disable EX mode
nnoremap Q <Nop>

" Map single quote to comma, backslash to quote.
nnoremap ' ,
nnoremap \ '

" Map current keyword search
nnoremap <Leader>/ *

" JSON formatting
autocmd FileType json nnoremap <Leader>jf :%!python -m json.tool<CR>

" Remove trailing whitespace
nnoremap <silent> <Leader>rw :FixWhitespace<CR>

" Remove Windows carrage return characters
nnoremap <silent> <Leader>rr :%s/\r//g<CR>``

" Relative number toggle short cut <,ln>
nnoremap <silent> <Leader>ln :set relativenumber!<CR>

" Run current buffer's vim script if filetype is vim
autocmd FileType vim    nnoremap <buffer> <Leader>rs :source %<CR>

" Remove search highlight when entering insert mode
" https://vi.stackexchange.com/a/10415
for s:c in ['a', 'A', '<Insert>', 'i', 'I', 'gI', 'gi', 'o', 'O', 's']
  execute 'nnoremap ' . s:c . ' :nohlsearch<CR>' . s:c
endfor

" Fix google search index plugin
if (!has('nvim') && v:version < 801) || !has('nvim-0.4')
  nnoremap <silent> n n<Plug>SearchIndex
  nnoremap <silent> N N<Plug>SearchIndex
endif

" Set undo-tree toggle to F5
nnoremap <F5> :UndotreeToggle<cr>

" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)

" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

" AppleScript key mappings
function! s:insertAppleScriptContinuationCharacter()
  let cc = '¬'
  " Check if cursor at the end of line - https://superuser.com/a/723715
  if col(".") >= col("$")-1 && getline('.') !~# '\s$'
    let cc = ' ' . cc
  endif
  execute 'normal! a' . cc
endfunction

augroup applescript_map
  autocmd!
  " Insert continuation character on applescript
  autocmd FileType applescript
        \ nnoremap <script><silent> <Leader><CR> :call <SID>insertAppleScriptContinuationCharacter()<CR>
  autocmd FileType applescript nnoremap <Leader>< a≤<ESC>
  autocmd FileType applescript nnoremap <Leader>> a≥<ESC>
  autocmd FileType applescript nnoremap <Leader>= a≠<ESC>
  autocmd FileType applescript nnoremap <Leader>/ a÷<ESC>
augroup END


" vim:ft=vim
