# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
# ZSH_THEME="robbyrussell"
if [ -z "$ZSH_THEME" ]; then  # Make theme overwritable
  ZSH_THEME="rambda"
fi

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in ~/.oh-my-zsh/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"
HISTSIZE=5000
SAVEHIST=1000
KEYTIMEOUT=1

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder
#
# https://github.com/clvv/fasd/issues/18#issuecomment-422921618
if type fasd > /dev/null 2>&1; then
  eval "$(fasd --init posix-alias)" # Anything you want enabled BUT zsh-hook
  function _fasd_preexec() {
    { eval "fasd --proc \$(fasd --sanitize \$2)"; } &|
    }
  autoload -Uz add-zsh-hook
  add-zsh-hook preexec _fasd_preexec
fi

if type fuck > /dev/null 2>&1; then
  eval $(thefuck --alias)
fi

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
#
#plugins=(
#  brew
#  git
#  man
#  python
#  virtualenv
#)
plugins=()

[ -s "$ZSH/oh-my-zsh.sh" ] && source $ZSH/oh-my-zsh.sh

# User configuration
if [[ "$(uname -a)" == *"Microsoft"* ]]; then
  export XVZD_OSTYPE="windows"
else
  export XVZD_OSTYPE="$(TMP__=$(uname | tr 'A-Z' 'a-z'); echo -n ${TMP__%%-*})"
fi

case $XVZD_OSTYPE in
  linux)
    if [ -f /etc/os-release ]; then
      export XVZD_OSNAME="$(cat /etc/os-release | grep -E '^NAME="(.*)"' |
        sed -E 's/^NAME="(.*)"/\1/' | tr 'A-Z' 'a-z')"
    fi
    ;;
esac

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

export VIRTUAL_ENV_DISABLE_PROMPT=
# export PROMPT_EOL_MARK=''


TMP__="$(which nvim)" && export EDITOR="$TMP__" || export EDITOR="$(which vi)"

alias easy_install="easy_install --prefix=$HOME/.local"

case $XVZD_OSTYPE in
  darwin)
    export PYTHONPATH="${PYTHONPATH}:$HOME/.local/lib/python2.7/site-packages:$HOME/.local/lib/python3.7/site-packages"
    export PATH="${PATH}:$HOME/Library/Android/sdk/tools"
    export PATH="${PATH}:$HOME/Library/Android/sdk/platform-tools"
    ;;
  windows)
    # If wsl exists
    if type wsl.exe > /dev/null 2>&1
    then
      # Fix wsl zprofile sourcing issue
      # By manually sourcing profile
      source $HOME/.zprofile
    fi
    ;;
esac

export XVZD_VROOT_PATH="$HOME/vroot"
if [ -e "$XVZD_VROOT_PATH/usr/tokens" ]; then
  for tokens in $(ls -1 $XVZD_VROOT_PATH/usr/tokens/*.sh); do
    source $tokens
  done
fi


# Brew path
export PATH="/usr/local/bin:$PATH"
export PATH="/usr/local/sbin:$PATH"

export PATH="$HOME/vroot/usr/bin:$PATH"

export PATH="$PATH:$HOME/Library/Python/2.7/bin:$HOME/Library/Python/3.7/bin"
export PATH="$PATH:$HOME/development/flutter/bin"
export PATH="$PATH:/usr/local/opt/qt/bin"
export PATH="$PATH:/Library/TeX/Root/bin/x86_64-darwin"
export PATH="$PATH:/usr/local/opt/openssl/bin"
export PATH="$PATH:/usr/local/opt/john-jumbo/share/john"

export OPENSSL_INCLUDE_DIR="/usr/local/opt/openssl/include"
export OPENSSL_LIB_DIR="/usr/local/opt/openssl/lib"

test -e $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh && \
  source $HOME/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh


XVZD_DEFER_CMD=('make' 'git')

for cmd in "${XVZD_DEFER_CMD[@]}"; do
  alias $cmd='__xvzd_defer_init && '$cmd
done

function __xvzd_defer_init() {
  for cmd in "${XVZD_DEFER_CMD[@]}"; do unalias $cmd; done
  funcs=( $(declare -f | grep '^__init_.*()' | cut -d' ' -f1) )
  for func in "${funcs[@]}"; do
    eval "$func" 2>/dev/null
  done
}
alias vminit="__xvzd_defer_init"


# Load gvm
if [ -s "$HOME/.gvm/scripts/gvm" ] && [ ! "$(whence -w __init_gvm)" = function ]; then
  declare -a __go_commands=('gvm' 'go')
  function __init_gvm() {
    for i in "${__go_commands[@]}"; do unalias $i; done
    source "$HOME/.gvm/scripts/gvm"
    unset __go_commands
    unset -f __init_gvm
  }
for i in "${__go_commands[@]}"; do alias $i='__init_gvm && '$i; done
fi

# https://github.com/robbyrussell/oh-my-zsh/issues/5327#issuecomment-386480914
# Defer initialization of nvm until nvm, node or a node-dependent command is
# run. Ensure this block is only run once if .bashrc gets sourced multiple times
# by checking whether __init_nvm is a function.
export NVM_DIR="$HOME/.config"

if [ -s "$NVM_DIR/nvm.sh" ] && [ ! "$(whence -w __init_nvm)" = function ]; then
  [ -s "$NVM_DIR/bash_completion" ] && source "$NVM_DIR/bash_completion"
  declare -a __node_commands=('nvm' 'node' 'npm' 'npx' 'yarn' 'gulp' 'grunt' 'webpack' 'terminalizer')
  function __init_nvm() {
    for i in "${__node_commands[@]}"; do unalias $i; done
    source "$NVM_DIR"/nvm.sh
    unset __node_commands
    unset -f __init_nvm
  }
for i in "${__node_commands[@]}"; do alias $i='__init_nvm && '$i; done
fi


# Load rvm
if [ -s "$HOME/.rvm/scripts/rvm" ] && [ ! "$(whence -w __init_rvm)" = function ]; then
  declare -a __ruby_commands=('rvm' 'ruby' 'bundle')
  function __init_rvm() {
    # Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
    export PATH="$PATH:$HOME/.rvm/bin"

    for i in "${__ruby_commands[@]}"; do unalias $i; done
    source "$HOME/.rvm/scripts/rvm"
    unset __ruby_commands
    unset -f __init_rvm
  }
for i in "${__ruby_commands[@]}"; do alias $i='__init_rvm && '$i; done
fi


